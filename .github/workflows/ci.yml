name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  formatting:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install poetry
        run: pip install poetry

      - name: Determine dependencies
        run: poetry lock

      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: poetry

      - name: Install dependencies
        run: |
          poetry install

      - name: Check formatting
        run: poetry run black --check .

  linting:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install poetry
        run: pip install poetry

      - name: Determine dependencies
        run: poetry lock

      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: poetry

      - name: Install dependencies
        run: |
          poetry install

      - name: Check code
        run: poetry run flake8

  testing:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install poetry
        run: pip install poetry

      - name: Determine dependencies
        run: poetry lock

      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: poetry

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y golang
          poetry install
      
      - name: Install funnel
        run: |
          wget https://github.com/ohsu-comp-bio/funnel/releases/download/0.10.1/funnel-linux-amd64-0.10.1.tar.gz
          tar -xzf funnel-linux-amd64-0.10.1.tar.gz

      - name: Start funnel
        run: |
          (./funnel server run --config tests/funnel.cfg 2> funnel.log) &
      
      - name: Test funnel server
        run: |
          ./funnel examples hello-world > hello-world.json
          ./funnel task create hello-world.json

      - name: Run pytest
        run: poetry run coverage run -m pytest tests/tests.py

      - name: Run Coverage
        run: poetry run coverage report -m
